const { promises: fs } = require('fs')

const { FRAMEWORK_NAMES } = require('../src/frameworks/main')

const FRAMEWORKS_DIR = `${__dirname}/../src/frameworks/`
const BUILD_DIR = `${__dirname}/../build/`
const FRAMEWORKS_BUILD = `${BUILD_DIR}frameworks.js`

// We enforce frameworks to be written with JSON to ensure they remain logicless
// which is simpler for contributors and avoid adding unnecessary logic.
// However, Node.js does not support JSON imports without any experimental
// flags. Also, not all browsers support it unless Webpack preprocesses it.
// Therefore, we transform JSON to JavaScript files using at build time.
const transformFrameworks = async function () {
  await fs.mkdir(BUILD_DIR, { recursive: true })
  const frameworks = await Promise.all(FRAMEWORK_NAMES.map(transformFramework))
  const fileContents = `${FRAMEWORKS_HEADER}${JSON.stringify(frameworks, null, 2)}`
  await fs.writeFile(FRAMEWORKS_BUILD, fileContents)
}

const transformFramework = async function (frameworkName) {
  const frameworkUrl = `${FRAMEWORKS_DIR}${frameworkName}.json`
  const jsonContents = await fs.readFile(frameworkUrl, 'utf8')
  const contents = JSON.parse(jsonContents)
  return contents
}

const FRAMEWORKS_HEADER = `// This file is autogenerated at build time
module.exports.FRAMEWORKS = `

transformFrameworks()
