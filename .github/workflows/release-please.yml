name: release-please
on:
  push:
    branches:
      - main

jobs:
  release-package:
    runs-on: ubuntu-latest
    steps:
      - uses: navikt/github-app-token-generator@a9cd374e271b8aef573b8c16ac46c44fb89b02db
        id: get-token
        with:
          private-key: ${{ secrets.TOKENS_PRIVATE_KEY }}
          app-id: ${{ secrets.TOKENS_APP_ID }}
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: release
        with:
          token: ${{ steps.get-token.outputs.token }}
          command: manifest
      - uses: actions/checkout@v2
        if: ${{ steps.release.outputs.releases_created }}
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '*'
          check-latest: true
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.releases_created }}
      - name: Install dependencies
        run: npm ci
        if: ${{ steps.release.outputs.releases_created }}
      # Publish new releases in order of dependencies
      - run: npm publish packages/git-utils/
        if: ${{ steps.release.outputs['packages/git-utils--version'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish packages/run-utils/
        if: ${{ steps.release.outputs['packages/run-utils--version'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish packages/functions-utils/
        if: ${{ steps.release.outputs['packages/functions-utils--version'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish packages/cache-utils/
        if: ${{ steps.release.outputs['packages/cache-utils--version'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish packages/config/
        if: ${{ steps.release.outputs['packages/config--version'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish packages/build/
        if: ${{ steps.release.outputs['packages/build--version'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
